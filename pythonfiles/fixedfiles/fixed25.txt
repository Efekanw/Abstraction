def createTestChart(self):
         # script
         lines = ['set output "' + image_path +'"']
         lines.append('set title "Successful Tests Per Second"')
         lines.append('set terminal png size ' + self.getChartSizeTmp(cvus))
         lines.append('set xlabel "Concurrent Users"')
         lines.append('set ylabel "Test/s"')
         lines.append('set grid back')
         lines.append('set xrange ' + self.getXRange())
         if not has_error:
             lines.append('plot "%s" u 1:2 w linespoints lw 2 lt 2 t "STPS"' % data_path)
         else:
             lines.append('set format x ""')
             lines.append('set multiplot')
             lines.append('unset title')
             lines.append('unset xlabel')
             lines.append('set size 1, 0.7')
             lines.append('set origin 0, 0.3')
             lines.append('set lmargin 5')
             lines.append('set bmargin 0')
             lines.append('plot "%s" u 1:2 w linespoints lw 2 lt 2 t "STPS"' % data_path)
             lines.append('set format x "% g"')
             lines.append('set bmargin 3')
             lines.append('set autoscale y')
             lines.append('set style fill solid .25')
             lines.append('set size 1.0, 0.3')
             lines.append('set ytics 20')
             lines.append('set xlabel "Concurrent Users"')
             lines.append('set ylabel "% errors"')
             lines.append('set origin 0.0, 0.0')
             lines.append('set yrange [0:100]')
             lines.append('plot "%s" u 1:3 w linespoints lt 1 lw 2 t "%% Errors"' % data_path)
             lines.append('unset multiplot')
         f = open(gplot_path, 'w')
         f.write('\n'.join(lines) + '\n')
         f.close()
         gnuplot(gplot_path)
         return
 
     def appendDelays(self, delay, delay_low, delay_high, stats):
         """ Show percentiles or min, avg and max in chart. """
