def test_fcntl_file_descriptor(self):
         self.f.close()
 
 
 class TestIoctl(unittest.TestCase):
     if termios:
         def test_ioctl_signed_unsigned_code_param(self):
             if termios.TIOCSWINSZ < 0:
                 set_winsz_opcode_maybe_neg = termios.TIOCSWINSZ
                 set_winsz_opcode_pos = termios.TIOCSWINSZ & 0xffffffffL
             else:
                 set_winsz_opcode_pos = termios.TIOCSWINSZ
                 set_winsz_opcode_maybe_neg, = struct.unpack("i",
                         struct.pack("I", termios.TIOCSWINSZ))
 
             # We're just testing that these calls do not raise exceptions.
             saved_winsz = fcntl.ioctl(0, termios.TIOCGWINSZ, "\0"*8)
             our_winsz = struct.pack("HHHH",80,25,0,0)
             # test both with a positive and potentially negative ioctl code
             new_winsz = fcntl.ioctl(0, set_winsz_opcode_pos, our_winsz)
             new_winsz = fcntl.ioctl(0, set_winsz_opcode_maybe_neg, our_winsz)
             fcntl.ioctl(0, set_winsz_opcode_maybe_neg, saved_winsz)
 
 
 def test_main():
     run_unittest(TestFcntl)
     run_unittest(TestIoctl)
 
 if __name__ == '__main__':
     test_main()
 -- a/Lib/test/test_ioctl.py
